!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var o,r,s=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(r,s){function i(t){try{a(o.next(t))}catch(t){s(t)}}function c(t){try{a(o.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,c)}a((o=o.apply(t,e||[])).next())}))},i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const c=i(n(1));console.log("test"),$("#exampleModal").on("shown.bs.modal",(function(){console.log("open window"),$("#myInput").trigger("focus")}));const a=new c.default;a.defaultTaskList;null===(o=document.getElementById("btn-create-task"))||void 0===o||o.addEventListener("click",t=>s(void 0,void 0,void 0,(function*(){console.log("on submit");const e=document.forms[0];fetch("/create_task",{method:"post",body:new FormData(e)}),console.log("We send post asynchronously (AJAX)"),t.preventDefault()}))),null===(r=document.getElementById("btn-truncate-tasks"))||void 0===r||r.addEventListener("click",t=>s(void 0,void 0,void 0,(function*(){fetch("/truncate_tasks",{method:"post",body:""}),console.log("We send post asynchronously (AJAX)"),t.preventDefault()})));console.log("run"),s(void 0,void 0,void 0,(function*(){var t;console.log("UrlTaskList","/get_all_tasks");const e=yield a.getTaskList("/get_all_tasks");for(let n of e){console.log(n.name);let e=`\n        <div class="card-group">\n            <div class="card text-white bg-secondary mb-3" style="max-width: 18rem;">\n                <div class="card-header">\n                    <div class="date">${n.created_on}</div>\n                        <button type="button" data-id=${n.id} id="btn-delete-task_${n.id}" class="btn btn-danger btn-delete-task">X</button>\n                    </div>\n                <div class="card-body">\n                    <h5 class="card-title">${n.name}</h5>\n                    <p class="card-text">${n.comment?n.comment:""}</p>\n                </div>\n            </div>\n        </div>\n        `,o=document.getElementsByClassName("task-list")[0];console.log(o),null==o||o.insertAdjacentHTML("beforeend",e),null===(t=document.getElementById("btn-delete-task_"+n.id))||void 0===t||t.addEventListener("click",t=>s(void 0,void 0,void 0,(function*(){alert(0);const e=t.target.dataset.id;console.log("e",t,t.target,e),fetch("/remove_task/"+e,{method:"delete",body:""}),t.preventDefault()})))}}))},function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(r,s){function i(t){try{a(o.next(t))}catch(t){s(t)}}function c(t){try{a(o.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,c)}a((o=o.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.defaultTaskList=["Напилить дров","Побелка в зале","Прибраться где были уточки","Покосить","Заштопать карманы"]}getTaskList(t){return o(this,void 0,void 0,(function*(){let e=yield fetch(t);try{if(e.ok){let t=yield e.json();return console.log(t),Promise.resolve(t)}console.warn("Ошибка HTTP: "+e.status)}catch(t){console.error("Обнаружена ошибка : "+t)}}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,