!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var o,r,s=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(r,s){function c(t){try{a(o.next(t))}catch(t){s(t)}}function i(t){try{a(o.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,i)}a((o=o.apply(t,e||[])).next())}))},c=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=c(n(1));console.log("test"),$("#exampleModal").on("shown.bs.modal",(function(){console.log("open window"),$("#myInput").trigger("focus")}));const a=new i.default;a.defaultTaskList;null===(o=document.getElementById("btn-create-task"))||void 0===o||o.addEventListener("click",t=>s(void 0,void 0,void 0,(function*(){console.log("on submit");const e=document.forms[0];fetch("/create_task",{method:"post",body:new FormData(e)}),console.log("We send post asynchronously (AJAX)"),t.preventDefault()}))),null===(r=document.getElementById("btn-truncate-tasks"))||void 0===r||r.addEventListener("click",t=>s(void 0,void 0,void 0,(function*(){fetch("/truncate_tasks",{method:"post",body:""}),console.log("We send post asynchronously (AJAX)"),t.preventDefault()})));console.log("run"),s(void 0,void 0,void 0,(function*(){var t;console.log("UrlTaskList","/get_all_tasks");const e=yield a.getTaskList("/get_all_tasks");for(let t of e){console.log(t.name);let e=`\n        <div class="card-group">\n            <div class="card text-white bg-secondary mb-3" style="max-width: 18rem;">\n                <div class="card-header">\n                    <div class="date">${t.created_on}</div>\n                        <button type="button" data-id=${t.id} id="btn-delete-task" class="btn btn-danger">X</button>\n                    </div>\n                <div class="card-body">\n                    <h5 class="card-title">${t.name}</h5>\n                    <p class="card-text">${t.comment?t.comment:""}</p>\n                </div>\n            </div>\n        </div>\n        `,n=document.getElementsByClassName("task-list")[0];console.log(n),null==n||n.insertAdjacentHTML("beforeend",e)}null===(t=document.getElementById("btn-delete-task"))||void 0===t||t.addEventListener("click",t=>s(void 0,void 0,void 0,(function*(){alert(0);const e=t.target.dataset.id;console.log("e",t,t.target,e),fetch("/remove_task/"+e,{method:"delete",body:""}),t.preventDefault()})))}))},function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(r,s){function c(t){try{a(o.next(t))}catch(t){s(t)}}function i(t){try{a(o.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,i)}a((o=o.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.defaultTaskList=["Напилить дров","Побелка в зале","Прибраться где были уточки","Покосить","Заштопать карманы"]}getTaskList(t){return o(this,void 0,void 0,(function*(){let e=yield fetch(t);try{if(e.ok){let t=yield e.json();return console.log(t),Promise.resolve(t)}console.warn("Ошибка HTTP: "+e.status)}catch(t){console.error("Обнаружена ошибка : "+t)}}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3RhdGljL2luZGV4LnRzIiwid2VicGFjazovLy8uL3N0YXRpYy90YXNrLnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiY29uc29sZSIsImxvZyIsIiQiLCJvbiIsInRyaWdnZXIiLCJ0YXNrTGlzdCIsImRlZmF1bHRUYXNrTGlzdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImZvcm0iLCJmb3JtcyIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsIkZvcm1EYXRhIiwicHJldmVudERlZmF1bHQiLCJsaXN0IiwiZ2V0VGFza0xpc3QiLCJ0YXNrIiwiaXRlbSIsImNyZWF0ZWRfb24iLCJpZCIsImNvbW1lbnQiLCJsaXN0RWxlbWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJhbGVydCIsInRhcmdldCIsImRhdGFzZXQiLCJ0aGlzIiwidXJsIiwicmVzcG9uc2UiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsIndhcm4iLCJzdGF0dXMiLCJlcnIiLCJlcnJvciJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIs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SXFCRCxFQUFLRSwyRUFDV0YsRUFBS0csOEtBR2hCSCxFQUFLN0MsdURBQ1A2QyxFQUFLSSxRQUFVSixFQUFLSSxRQUFVLCtFQUs3REMsRUFBY2xCLFNBQVNtQix1QkFBdUIsYUFBYSxHQUMvRDFCLFFBQVFDLElBQUl3QixHQUNaQSxXQUFhRSxtQkFBbUIsWUFBWU4sR0FHTixRQUExQyxFQUFBZCxTQUFTQyxlQUFlLDBCQUFrQixTQUFFQyxpQkFBaUIsUUFBZUMsR0FBUyxvQ0FDakZrQixNQUFNLEdBQ04sTUFBTUwsRUFBS2IsRUFBRW1CLE9BQU9DLFFBQVFQLEdBQzVCdkIsUUFBUUMsSUFBSSxJQUFJUyxFQUFFQSxFQUFFbUIsT0FBT04sR0FDM0JWLE1BQU0sZ0JBQW9CVSxFQUFNLENBQUNULE9BQU8sU0FBU0MsS0FBSyxLQUN0REwsRUFBRU8seUIsOFlDdENWLFVBNUJBLE1BRUksY0FDSWMsS0FBS3pCLGdCQUFrQixDQUNuQixnQkFDQSxpQkFDQSw2QkFDQSxXQUNBLHFCQUdILFlBQVkwQixHLHlDQUNiLElBQUlDLFFBQWlCcEIsTUFBTW1CLEdBQzNCLElBQ0ksR0FBSUMsRUFBU0MsR0FBSSxDQUNiLElBQUlDLFFBQWFGLEVBQVNFLE9BRTFCLE9BREFuQyxRQUFRQyxJQUFJa0MsR0FDTEMsUUFBUUMsUUFBUUYsR0FFdkJuQyxRQUFRc0MsS0FBSyxnQkFBa0JMLEVBQVNNLFFBR2hELE1BQU1DLEdBQ0Z4QyxRQUFReUMsTUFBTSx1QkFBdUJEIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcbiIsImltcG9ydCBUYXNrIGZyb20gJy4vdGFzayc7XG5jb25zb2xlLmxvZygndGVzdCcpO1xuJCgnI2V4YW1wbGVNb2RhbCcpLm9uKCdzaG93bi5icy5tb2RhbCcsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zb2xlLmxvZygnb3BlbiB3aW5kb3cnKTtcbiAgICAkKCcjbXlJbnB1dCcpLnRyaWdnZXIoJ2ZvY3VzJylcbiAgfSlcbmNvbnN0IHRhc2tMaXN0ID0gbmV3IFRhc2s7XG5jb25zdCBkZWZhdWx0VGFza0xpc3QgPSB0YXNrTGlzdC5kZWZhdWx0VGFza0xpc3Q7XG5jb25zdCBVcmxUYXNrTGlzdCA9ICcvZ2V0X2FsbF90YXNrcyc7XG5jb25zdCBVcmxDbGVhclRhc2tMaXN0ID0gJy90cnVuY2F0ZV90YXNrcyc7XG5jb25zdCBVcmxSZW1vdmVUYXNrID0gJy9yZW1vdmVfdGFzaydcbmNvbnN0IFVybENyZWF0ZVRhc2sgPSAnL2NyZWF0ZV90YXNrJ1xuXG5pbnRlcmZhY2UgRE9NRXZlbnQ8VCBleHRlbmRzIEV2ZW50VGFyZ2V0PiBleHRlbmRzIEV2ZW50IHtcbiAgdGFyZ2V0OiBUXG59XG5cbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuLWNyZWF0ZS10YXNrXCIpPy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixhc3luYyAoZSkgPT57XG4gICAgY29uc29sZS5sb2coJ29uIHN1Ym1pdCcpO1xuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5mb3Jtc1swXTtcbiAgICBmZXRjaChVcmxDcmVhdGVUYXNrLCB7bWV0aG9kOidwb3N0JywgYm9keTogbmV3IEZvcm1EYXRhKGZvcm0pfSk7XG5cbiAgICBjb25zb2xlLmxvZygnV2Ugc2VuZCBwb3N0IGFzeW5jaHJvbm91c2x5IChBSkFYKScpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbn0pXG5cbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidG4tdHJ1bmNhdGUtdGFza3MnKT8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLGFzeW5jIChlKSA9PntcbiAgICBmZXRjaChVcmxDbGVhclRhc2tMaXN0LCB7bWV0aG9kOidwb3N0Jyxib2R5OicnfSk7XG5cbiAgICBjb25zb2xlLmxvZygnV2Ugc2VuZCBwb3N0IGFzeW5jaHJvbm91c2x5IChBSkFYKScpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbn0pXG5cblxuXG5cblxuY29uc3QgYnVpbGRUYXNrTGlzdCA9IGFzeW5jICggKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ1VybFRhc2tMaXN0JyxVcmxUYXNrTGlzdCk7XG4gICAgY29uc3QgbGlzdCA9IGF3YWl0IHRhc2tMaXN0LmdldFRhc2tMaXN0KFVybFRhc2tMaXN0KTtcbiAgICBmb3IobGV0IHRhc2sgb2YgbGlzdCl7XG4gICAgICAgIGNvbnNvbGUubG9nKHRhc2submFtZSk7XG4gICAgICAgIGxldCBpdGVtID0gYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ncm91cFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgdGV4dC13aGl0ZSBiZy1zZWNvbmRhcnkgbWItM1wiIHN0eWxlPVwibWF4LXdpZHRoOiAxOHJlbTtcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVcIj4ke3Rhc2suY3JlYXRlZF9vbn08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGRhdGEtaWQ9JHt0YXNrLmlkfSBpZD1cImJ0bi1kZWxldGUtdGFza1wiIGNsYXNzPVwiYnRuIGJ0bi1kYW5nZXJcIj5YPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPVwiY2FyZC10aXRsZVwiPiR7dGFzay5uYW1lfTwvaDU+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwiY2FyZC10ZXh0XCI+JHt0YXNrLmNvbW1lbnQgPyB0YXNrLmNvbW1lbnQgOiAnJ308L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG4gICAgICAgIGxldCBsaXN0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3Rhc2stbGlzdCcpWzBdO1xuICAgICAgICBjb25zb2xlLmxvZyhsaXN0RWxlbWVudCk7XG4gICAgICAgIGxpc3RFbGVtZW50Py5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsaXRlbSk7XG5cbiAgICB9XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bi1kZWxldGUtdGFzaycpPy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsYXN5bmMgKGU6YW55KSA9PntcbiAgICAgICAgYWxlcnQoMCk7XG4gICAgICAgIGNvbnN0IGlkID0gZS50YXJnZXQuZGF0YXNldC5pZDtcbiAgICAgICAgY29uc29sZS5sb2coJ2UnLGUsZS50YXJnZXQsaWQpO1xuICAgICAgICBmZXRjaChgJHtVcmxSZW1vdmVUYXNrfS8ke2lkfWAsIHttZXRob2Q6J2RlbGV0ZScsYm9keTonJ30pO1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSlcblxufVxuXG5jb25zdCBydW4gPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ3J1bicpO1xuICAgIGJ1aWxkVGFza0xpc3QoKTtcblxufVxuXG5ydW4oKTsiLCJjbGFzcyBUYXNrIHtcbiAgICBkZWZhdWx0VGFza0xpc3Q6IHN0cmluZ1tdO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRlZmF1bHRUYXNrTGlzdCA9IFtcbiAgICAgICAgICAgICfQndCw0L/QuNC70LjRgtGMINC00YDQvtCyJyxcbiAgICAgICAgICAgICfQn9C+0LHQtdC70LrQsCDQsiDQt9Cw0LvQtScsXG4gICAgICAgICAgICAn0J/RgNC40LHRgNCw0YLRjNGB0Y8g0LPQtNC1INCx0YvQu9C4INGD0YLQvtGH0LrQuCcsXG4gICAgICAgICAgICAn0J/QvtC60L7RgdC40YLRjCcsXG4gICAgICAgICAgICAn0JfQsNGI0YLQvtC/0LDRgtGMINC60LDRgNC80LDQvdGLJ1xuICAgICAgICBdXG4gICAgfVxuICAgYXN5bmMgZ2V0VGFza0xpc3QodXJsOnN0cmluZyl7XG4gICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5vaykgeyAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsZXQganNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhqc29uKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGpzb24pO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcItCe0YjQuNCx0LrQsCBIVFRQOiBcIiArIHJlc3BvbnNlLnN0YXR1cyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihg0J7QsdC90LDRgNGD0LbQtdC90LAg0L7RiNC40LHQutCwIDogJHtlcnJ9YClcbiAgICAgICAgfVxuXG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVGFzazsiXSwic291cmNlUm9vdCI6IiJ9