!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o,r,c=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,c){function s(e){try{l(o.next(e))}catch(e){c(e)}}function i(e){try{l(o.throw(e))}catch(e){c(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,i)}l((o=o.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const i=s(n(1));console.log("test"),$("#exampleModal").on("shown.bs.modal",(function(){console.log("open window"),$("#myInput").trigger("focus")}));const l=new i.default;l.defaultTaskList;null===(o=document.getElementById("btn-create-task"))||void 0===o||o.addEventListener("click",e=>c(void 0,void 0,void 0,(function*(){console.log("on submit");const t=document.forms[0];fetch(t.action,{method:"post",body:new FormData(t)}),console.log("We send post asynchronously (AJAX)"),e.preventDefault()}))),null===(r=document.getElementById("btn-truncate-tasks"))||void 0===r||r.addEventListener("click",e=>c(void 0,void 0,void 0,(function*(){fetch("/truncate_tasks",{method:"post",body:""}),console.log("We send post asynchronously (AJAX)"),e.preventDefault()})));(()=>{console.log("run");c(void 0,void 0,void 0,(function*(){console.log("UrlTaskList","/get_all_tasks");const e=yield l.getTaskList("/get_all_tasks");for(let t of e){console.log(t.name);let e=`\n        <div class="card-group">\n            <div class="card text-white bg-secondary mb-3" style="max-width: 18rem;">\n                <div class="card-header">${t.created_on}</div>\n                <div class="card-body">\n                    <h5 class="card-title">${t.name}</h5>\n                    <p class="card-text">${t.comment?t.comment:""}</p>\n                </div>\n            </div>\n        </div>\n        `,n=document.getElementsByClassName("task-list")[0];console.log(n),null==n||n.insertAdjacentHTML("beforeend",e)}}))})()},function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(r,c){function s(e){try{l(o.next(e))}catch(e){c(e)}}function i(e){try{l(o.throw(e))}catch(e){c(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,i)}l((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});t.default=class{constructor(){this.defaultTaskList=["Напилить дров","Побелка в зале","Прибраться где были уточки","Покосить","Заштопать карманы"]}getTaskList(e){return o(this,void 0,void 0,(function*(){let t=yield fetch(e);try{if(t.ok){let e=yield t.json();return console.log(e),Promise.resolve(e)}console.warn("Ошибка HTTP: "+t.status)}catch(e){console.error("Обнаружена ошибка : "+e)}}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,